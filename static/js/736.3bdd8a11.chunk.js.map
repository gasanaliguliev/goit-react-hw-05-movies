{"version":3,"file":"static/js/736.3bdd8a11.chunk.js","mappings":"oRAGaA,EAAgBC,EAAAA,EAAAA,IAAH,0GAQbC,EAAWD,EAAAA,EAAAA,IAAH,kE,SC8CrB,EApDa,WACX,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,GAAiB,OAAbF,EAAJ,CAIA,IAAMG,EAAQ,mCAAG,8GAEMC,EAAAA,EAAAA,GAAUJ,GAFhB,OAEPK,EAFO,OAGbR,EAASQ,EAAKC,MAHD,gDAKbP,EAAS,EAAD,IALK,yDAAH,qDAQdI,GAVC,CAWF,GAAE,CAACH,KAGF,gCACGF,IAAS,yBAAMA,IACfF,IACC,SAACJ,EAAD,UACGI,EAAMW,KAAI,SAAAD,GACT,OACE,UAACZ,EAAD,YACE,gBACEc,IACwB,OAAtBF,EAAKG,aAAL,yCACsCH,EAAKG,cACvC,+EAENC,IAAG,UAAKJ,EAAKK,MACbC,MAAO,IACPC,OAAQ,IACRC,QAAQ,UAEV,uBAAIR,EAAKK,QACT,yBAAG,cAAYL,EAAKS,eAbPT,EAAKU,QAiBvB,QAKV,C,kMCrDDC,EAAAA,EAAAA,SAAAA,QAAyB,6BAEzB,IAAMC,EAAU,mCAEVC,EAAmB,mCAAG,oGACHF,EAAAA,EAAAA,IAAA,wCAA2CC,IADxC,cACpBE,EADoB,yBAEnBA,EAASf,MAFU,2CAAH,qDAKnBgB,EAAkB,mCAAG,WAAMrB,GAAN,uFACFiB,EAAAA,EAAAA,IAAA,mBACTjB,EADS,oBACWkB,EADX,oBADE,cACnBE,EADmB,yBAIlBA,EAASf,MAJS,2CAAH,sDAOlBD,EAAS,mCAAG,WAAMJ,GAAN,uFACOiB,EAAAA,EAAAA,IAAA,kBACVjB,EADU,4BACkBkB,EADlB,oBADP,cACVE,EADU,yBAITA,EAASf,MAJA,2CAAH,sDAOTiB,EAAgB,mCAAG,WAAMtB,GAAN,uFACAiB,EAAAA,EAAAA,IAAA,kBACVjB,EADU,4BACkBkB,EADlB,2BADA,cACjBE,EADiB,yBAIhBA,EAASf,MAJO,2CAAH,sDAOhBkB,EAAgB,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,iCACKC,EADL,kBACsBM,EADtB,+CADA,cACjBJ,EADiB,yBAIhBA,EAASf,MAJO,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","fetch/FetchApi.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n\n`\n\nexport const CastCard = styled.div`\n  text-align: center;\n  width: 200px;\n\n`","import { fetchCast } from 'fetch/FetchApi';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastContainer, CastCard } from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState(null);\n  const [error, setError] = useState('');\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    if (moviesId === null) {\n      return;\n    }\n\n    const getCasts = async () => {\n      try {\n        const data = await fetchCast(moviesId);\n        setCasts(data.cast);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getCasts();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {casts && (\n        <CastContainer>\n          {casts.map(cast => {\n            return (\n              <CastCard key={cast.cast_id}>\n                <img\n                  src={\n                    cast.profile_path !== null\n                      ? `https://image.tmdb.org/t/p/w500${cast.profile_path}`\n                      : 'https://i.pinimg.com/originals/a0/57/48/a05748c84d7093e382c560bbc57665ce.jpg'\n                  }\n                  alt={`${cast.name}`}\n                  width={200}\n                  height={300}\n                  loading=\"lazy\"\n                />\n                <p>{cast.name}</p>\n                <p>Character: {cast.character}</p>\n              </CastCard>\n            );\n            \n          })}\n        </CastContainer>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nconst API_KEY = 'f62607027645556b04bb89c144d22028';\n\nconst fetchTrandingMovies = async () => {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMoviesDetails = async moviesId => {\n  const response = await axios.get(\n    `/3/movie/${moviesId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchCast = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchMovieReview = async moviesId => {\n  const response = await axios.get(\n    `3/movie/${moviesId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n\nconst fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `3/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport {\n  fetchTrandingMovies,\n  fetchMoviesDetails,\n  fetchCast,\n  fetchMovieReview,\n  fetchSearchMovie,\n};\n"],"names":["CastContainer","styled","CastCard","useState","casts","setCasts","error","setError","moviesId","useParams","useEffect","getCasts","fetchCast","data","cast","map","src","profile_path","alt","name","width","height","loading","character","cast_id","axios","API_KEY","fetchTrandingMovies","response","fetchMoviesDetails","fetchMovieReview","fetchSearchMovie","query"],"sourceRoot":""}